class Solution {
    public int first(int[] arr,int target){
        int n = arr.length;
        int low = 0;
        int high = n - 1;
        int first = -1;
        while(low <= high){
            int mid = (low + high)/2;
            if(arr[mid] == target){
                first = mid;
                high = mid - 1;
            }
            else if (arr[mid] < target){
                low = mid + 1;
            }else{
                high = mid - 1;
            }
        }
        return first;
    }
    public int last(int[] arr,int target){
        int n = arr.length;
        int low = 0;
        int high = n- 1;
        int last = -1;
        while(low <= high){
            int mid = (low + high)/2;
            if(arr[mid] == target){
                last = mid ;
                low = mid + 1;
            }
            else if(arr[mid] < target){
                low = mid + 1;
            }
            else{
                high = mid - 1;
            }
        }
        return last;
    }
    int count(int[] arr, int target) {
        // code here
        int first = first(arr,target);
        if (first == -1) {
         return 0 ;  
        }
        int second = last(arr,target);
        return (second - first + 1);
    }
}