class Solution {
    public int findMin(int[] nums) {
        int n = nums.length;
        int ans = Integer.MAX_VALUE;
        int low = 0;
        int high = n - 1;
       
        while(low <= high){

            int mid = (low + high)/2;
            
            if(nums[low] == nums[mid] && nums[mid]== nums[high]){
                //shrink the search space
                ans = Math.min(ans,nums[low]);
                low = low + 1;
                high = high - 1;
                continue;
            }
        
            if(nums[low] <= nums[mid]){
                //it means left half is sorted
                ans = Math.min(ans,nums[low]);
                //eliminate the left half
                low = mid + 1;
            }
            else{
                //right half is sorted
                ans = Math.min(ans, nums[mid]);
                //eliminate the right half
                high = mid - 1;
            }
        }
        return ans;
    }
}